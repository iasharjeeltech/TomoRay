@model TomoRay.Presentation.Models.MarkAttendanceViewModel

<h2>Mark Attendance</h2>

<form asp-action="Mark" method="post">
    <input type="hidden" name="UserId" value="@Model.UserId" />

    <video id="video" width="320" height="240" autoplay></video><br />
    <button type="button" id="capture">📸Capture</button><br />
    <canvas id="canvas" width="320" height="240" style="display:none;"></canvas>

    <input type="hidden" name="PhotoBase64" id="photoBase64" />

    <input type="hidden" name="Latitude" id="latitude" />
    <input type="hidden" name="Longitude" id="longitude" />
    <input type="hidden" name="LocationAddress" id="locationAddress" />

    <div class="form-group mt-2">
        <label>Remarks (Optional)</label>
        <textarea name="Remarks" class="form-control"></textarea>
    </div>

    <button type="submit" class="btn btn-success mt-3">Mark Attendance</button>
</form>

@section Scripts {
    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureButton = document.getElementById('capture');
        const photoBase64Input = document.getElementById('photoBase64');
        const latitudeInput = document.getElementById("latitude");
        const longitudeInput = document.getElementById("longitude");
        const locationAddressInput = document.getElementById("locationAddress");

        let latitude = "";
        let longitude = "";
        let locationName = "";

        // Open Camera
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                video.srcObject = stream;
            });

        // Fetch Location
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(async function (position) {
                latitude = position.coords.latitude.toFixed(4);
                longitude = position.coords.longitude.toFixed(4);

                latitudeInput.value = latitude;
                longitudeInput.value = longitude;

                // 🔁 Reverse Geocoding using Nominatim API
                const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latitude}&lon=${longitude}`);
                const data = await response.json();

                locationName = data.address.city || data.address.town || data.address.village || data.display_name || "Unknown Location";

                locationAddressInput.value = locationName; // Save for DB
            });
        }

        // Capture with Location Name + Time
        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            canvas.style.display = 'block';
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            const now = new Date();
            const dateTime = now.toLocaleString();

            const watermarkText = `📍 ${locationName}  ⏰ ${dateTime}`;
            context.font = '16px Arial';
            context.fillStyle = 'white';
            context.strokeStyle = "black";
            context.lineWidth = 2;
            context.strokeText(watermarkText, 10, canvas.height - 10);
            context.fillText(watermarkText, 10, canvas.height - 10);

            const base64Image = canvas.toDataURL('image/png');
            photoBase64Input.value = base64Image;
        });
    </script>
}


}

